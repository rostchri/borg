%table
	%tr
		%th Kategorie
		- unless item.other[:movietitle].nil?
			%th Filmtitel
			%th Erscheinungsjahr
		- unless item.infos.nil?
			%th Technische Informationen
		- unless item.imdbid.nil?
			%th IMDB
		%th Quelle
		- if item.update_counter > 0
			%th Änderungen
	%tr
		%td= item.category
		- unless item.other[:movietitle].nil?
			%td= item.other[:movietitle]
			%td= item.other[:movieyear]
		- unless item.infos.nil?
			%td= item.infos
		- unless item.imdbid.nil?
			%th= link_to "#{item.imdbid}", "http://www.imdb.de/title/#{item.imdbid}"
		%td
			= link_to "Lokal", entrant_url(item)
			= link_to "Extern", item.srcurl
		- if item.update_counter > 0
			%td= item.update_counter
- unless item.update_counter == 0 || item.diff.nil? || item.diff.empty?
	%table
		%tr
			%th Änderungen
		- item.diff.each do |diff|
			%tr
				%td= raw diff
				
- if !(item.imdbid.nil? || (movies = Movie.by_imdbid(item.imdbid)).empty?) || (item.imdbid.nil? && !item.other[:movietitle].nil? && !item.other[:movieyear].nil? && !(movies = Movie.soundex_find(:all, :limit => 10, :conditions => {:c07 => item.other[:movieyear]}, :soundex => item.other[:movietitle])).empty?)
	%table
		%tr
			%th Vorhandene Titel
			%th Pfad
			%th Dateien
			-#
				%th Technische Daten
		- movies.each do |movie|
			%tr
				%td= link_to movie.path.topdirectory, mediapath_path(movie.path), :rel => "tooltip", :title => movie.path.strPath
				- unless movie.path.nil?
					%td= render("mediapath/mediapath", :mediapath => movie.path, :title_path_mismatch => movie.path.topdirectory != movie.localtitle)
				%td= render(:partial => "mediafiles/mediafile", :object => movie.file)
				-#
					%td= render("streamdetails/logos", :streamdetails => movie.details)
			
- unless item.content.nil?
	= raw sfile_content(item,false)